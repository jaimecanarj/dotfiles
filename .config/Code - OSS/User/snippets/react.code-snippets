//Hooks
{
  "useState": {
    "scope": "javascriptreact,javascript,typescript, typescriptreact",
    "prefix": "us",
    "body": ["const [ $1, set${1/(.*)/${1:/capitalize}/} ] = useState( $0 )"]
  },

  "useEffect": {
    "scope": "javascriptreact,javascript,typescript, typescriptreact",
    "prefix": "ue",
    "body": ["useEffect(() => {", "\t$0", "},[])"]
  },

  "useEffect CleanUp": {
    "scope": "javascriptreact,javascript,typescript, typescriptreact",
    "prefix": "uec",
    "body": [
      "useEffect(() => {",
      "\t$1",
      "\treturn ($2) => {",
      "\t\t$0",
      "\t}",
      "},[])"
    ]
  },

  "useRef": {
    "scope": "javascriptreact, javascript, typescript, typescriptreact",
    "prefix": "uref",
    "body": "const $1Ref = useRef($0)"
  },

  "useContext": {
    "scope": "javascriptreact, javascript, typescript, typescriptreact",
    "prefix": "uc",
    "body": "const $1Context = useContext($0)"
  },

  "useReducer": {
    "scope": "javascriptreact, javascript, typescript, typescriptreact",
    "prefix": "ur",
    "body": "const [state, dispatch] = useReducer(reducer, initialState)"
  },

  //Imports
  "Import useState": {
    "scope": "javascriptreact,javascript,typescript, typescriptreact",
    "prefix": "imus",
    "body": "import {useState} from 'react'"
  },

  "Import useEffect": {
    "scope": "javascriptreact,javascript,typescript, typescriptreact",
    "prefix": "imue",
    "body": "import {useEffect} from 'react'"
  },

  "Import useState y useEffect": {
    "scope": "javascriptreact,javascript,typescript, typescriptreact",
    "prefix": "imuse",
    "body": "import {useState, useEffect} from 'react'"
  },

  "Import module destructured": {
    "scope": "javascriptreact,javascript,typescript, typescriptreact",
    "prefix": "imd",
    "body": "import { $1 } from '$0'"
  },

  "Import module": {
    "scope": "javascriptreact,javascript,typescript, typescriptreact",
    "prefix": "imn",
    "body": "import '$0'"
  },

  "Import moduleName from module": {
    "scope": "javascriptreact,javascript,typescript, typescriptreact",
    "prefix": "imp",
    "body": "import $1 from '$0'"
  },

  "Import react router": {
    "scope": "javascriptreact,javascript,typescript, typescriptreact",
    "prefix": "imrr",
    "body": "import {RouterProvider, createBrowserRouter} from 'react-router-dom'"
  },

  //Crear Funciones
  "Funcion con nombre": {
    "scope": "javascriptreact,javascript,typescript, typescriptreact",
    "prefix": "nfn",
    "body": ["const $1 = ($2) => { $0 }"]
  },

  "Funcion con nombre asincrona": {
    "scope": "javascriptreact,javascript,typescript, typescriptreact",
    "prefix": "nfna",
    "body": ["const $1 = async($2) => { $0 }"]
  },

  "Funcion sin nombre": {
    "scope": "javascriptreact,javascript,typescript, typescriptreact",
    "prefix": "anfn",
    "body": "( $1 ) => { $0 }"
  },

  "Funcion sin nombre sin corchetes": {
    "scope": "javascriptreact,javascript,typescript, typescriptreact",
    "prefix": "anfna",
    "body": "( $1 ) => $0"
  },

  //Desestructurar
  "Desestructurar objeto": {
    "scope": "javascriptreact,javascript,typescript, typescriptreact",
    "prefix": "dob",
    "body": "const { $1 } = $0"
  },

  "Desestructurar array": {
    "scope": "javascriptreact,javascript,typescript, typescriptreact",
    "prefix": "dar",
    "body": "const [ $1 ] = $0"
  },

  //Basicos javascript
  "Crear intervalo": {
    "scope": "javascriptreact,javascript,typescript, typescriptreact",
    "prefix": "sti",
    "body": "setInterval(() => { $1 }, $0)"
  },

  "Crear timeout": {
    "scope": "javascriptreact,javascript,typescript, typescriptreact",
    "prefix": "sto",
    "body": "setTimeout(() => { $1 }, $0)"
  },

  //Componente
  "Crear componente": {
    "scope": "javascriptreact,javascript,typescript, typescriptreact",
    "prefix": "rc",
    "body": [
      "const ${1:$TM_FILENAME_BASE} = ( $0 ) => {",
      "\treturn (",
      "\t\t<div>$1</div>",
      "\t)",
      "}",
      "",
      "export default $1"
    ]
  },

  "Crear accion": {
    "scope": "javascriptreact,javascript,typescript, typescriptreact",
    "prefix": "ura",
    "body": "export const ${1/(.*)/${1:/upcase}/} = '${1/(.*)/${1:/upcase}/}'"
  },

  "Dispatch accion": {
    "prefix": "urd",
    "body": "dispatch({type:$0})"
  },

  //React Router
  "Basic router": {
    "scope": "javascriptreact,javascript,typescript, typescriptreact",
    "prefix": "rr",
    "body": "import {RouterProvider,createBrowserRouter} from 'react-router-dom'"
  }
}
